name: Create GCP Bronze Resources

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    paths:
      - 'bronze_layer/main.py'              
      - 'bronze_layer/functions.py'         
      - 'bronze_layer/requirements_ingest.txt'  
      - 'bronze_layer/Dockerfile'

jobs:
  create-resources:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create JSON credentials file
      uses: jsdaniell/create-json@v1.2.3
      with:
        name: "gcloud-service-key.json"
        json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: Authenticate to Google Cloud
      run: gcloud auth activate-service-account --key-file=gcloud-service-key.json

    - name: Install jq (if not pre-installed)
      run: |
        sudo apt-get update && sudo apt-get install -y jq
        jq --version  # Confirm version
    
    - name: Load config.json into environment
      run: |
        for key in $(jq -r '.bronze_layer | keys[]' config.json); do
          value=$(jq -r ".bronze_layer[\"$key\"]" config.json)
          echo "$key=$value" >> $GITHUB_ENV
        done
    
    - name: Debug Environment Variables
      run: |
        echo "artifact_repo=${{ env.artifact_repo }}"
        echo "description=${{ env.description }}"
        echo "image_name=${{ env.image_name }}"
        echo "job_name=${{ env.job_name }}"
        echo "memory=${{ env.memory }}"
        echo "cpu=${{ env.cpu }}"


    - name: Check if Artifact Registry Repo Exists
      id: check-repo
      run: |
        if gcloud artifacts repositories describe ${{ env.artifact_repo }} --location=${{ secrets.GCP_REGION }}; then
          echo "repo_exists=true" >> $GITHUB_ENV
        else
          echo "repo_exists=false" >> $GITHUB_ENV
        fi

    - name: Create Artifact Registry Repo (if needed)
      if: env.repo_exists == 'false'
      run: |
        gcloud artifacts repositories create ${{ env.artifact_repo }} \
          --repository-format=docker \
          --location=${{ secrets.GCP_REGION }} \
          --description="${{ env.description }}"

    - name: Build and Push Docker Image
      run: |
        IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.artifact_repo }}/${{ env.image_name }}:latest"
        docker build -t $IMAGE -f bronze_layer/Dockerfile bronze_layer
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev
        docker push $IMAGE

    - name: Create or Update Cloud Run Job
      run: |
        JOB_NAME="${{ env.job_name }}"
        REGION="${{ secrets.GCP_REGION }}"
        IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.artifact_repo }}/${{ env.image_name }}:latest"

        if gcloud run jobs describe $JOB_NAME --region $REGION > /dev/null 2>&1; then
          echo "Updating Cloud Run Job: $JOB_NAME"
          gcloud run jobs update $JOB_NAME \
            --image $IMAGE \
            --region $REGION \
            --memory ${{ env.memory }} \
            --cpu ${{ env.cpu }}
        else
          echo "Creating Cloud Run Job: $JOB_NAME"
          gcloud run jobs create $JOB_NAME \
            --image $IMAGE \
            --region $REGION \
            --memory ${{ env.memory }} \
            --cpu ${{ env.cpu }}
        fi
