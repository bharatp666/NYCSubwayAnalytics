name : Create Docker Image


on:
    push:
        paths:
            - 'Ingestion/main.py'              
            - 'Ingestion/functions.py'         
            - 'Ingestion/requirements_ingest.txt'  
            - 'Ingestion/Dockerfile' 

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:

        - name: code checkout
          uses: actions/checkout@v2
        
        - name: Create JSON credentials file
          id: create-json-credentials
          uses: jsdaniell/create-json@v1.2.3
          with:
            name: "gcloud-service-key.json"
            json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
    
        - name: install the gcloud cli
          uses: google-github-actions/setup-gcloud@v1
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
            export_default_credentials: true
    
        - name: Authenticate to Google Cloud
          run: gcloud auth activate-service-account --key-file=gcloud-service-key.json
        
        - name: Enable Artifact Registry API
          run: |
            if ! gcloud services list --enabled | grep -q artifactregistry.googleapis.com; then
              echo "Artifact Registry API is not enabled. Enabling it now..."
              gcloud services enable artifactregistry.googleapis.com
            else
              echo "Artifact Registry API is already enabled."
            fi
        

        # - name: Check if Repository Exists
        #   id: check-repo
        #   run: |
        #     if gcloud artifacts repositories describe ${{ secrets.ARTIFACT_REPO }} --location=${{ secrets.GCP_REGION }}; then
        #       echo "repo_exists=true" >> $GITHUB_ENV
        #     else
        #        echo "repo_exists=false" >> $GITHUB_ENV
        #       fi
  
        - name: Create Artifact Registry Repository
          if: env.repo_exists == 'false'
          run: |
                 gcloud artifacts repositories create ${{ secrets.ARTIFACT_REPO }} \
                 --repository-format=docker \
                 --location=${{ secrets.GCP_REGION }} \
                 --description="Docker repository for storing container images"
  
        - name: Build and Push Docker Image
          run: |
                IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/my-app:latest"
                docker build -t $IMAGE ./Ingestion  # Specify the Ingestion folder as the build context
                docker push $IMAGE


