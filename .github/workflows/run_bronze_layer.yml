name: Run Bronze Layer

on:
  workflow_dispatch:
  push:
    paths:
      - 'bronze_layer/**'              
      - 'Dockerfile'                   
      - '.github/workflows/run_bronze_layer.yml'  

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'beta'

    - name: Configure Docker to push to Artifact Registry
      run: |
        gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

    - name: Build and Push Docker Image
      run: |
        IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/bronze-artifacts/bronze-job"
        docker build -t $IMAGE .
        docker push $IMAGE

    - name: Create or Update Cloud Run Job
      run: |
        JOB_NAME="bronze-job"
        REGION="${{ secrets.GCP_REGION }}"
        IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/bronze-artifacts/bronze-job"

        if gcloud beta run jobs describe $JOB_NAME --region=$REGION > /dev/null 2>&1; then
          echo "Updating existing Cloud Run Job: $JOB_NAME"
          gcloud beta run jobs update $JOB_NAME \
            --image=$IMAGE \
            --region=$REGION
        else
          echo "Creating new Cloud Run Job: $JOB_NAME"
          gcloud beta run jobs create $JOB_NAME \
            --image=$IMAGE \
            --region=$REGION \
            --command="python" \
            --args="bronze_main.py" \
            --memory=512Mi \
            --cpu=1 \
            --max-retries=1 \
            --execution-environment=gen2
        fi

    - name: Execute Cloud Run Job
      run: |
        gcloud beta run jobs execute bronze-job --region=${{ secrets.GCP_REGION }}
